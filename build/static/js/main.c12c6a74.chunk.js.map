{"version":3,"sources":["store/features/filter.tsx","components/Filters.tsx","components/Menu.tsx","components/Header.tsx","components/LikeVector.tsx","components/Loader.tsx","components/Card.tsx","components/List.tsx","components/PokemonEntry.tsx","App.tsx","store/store.tsx","index.tsx"],"names":["filterSlice","createSlice","name","initialState","type","id","saved","reducers","setName","state","payload","setType","setId","setSaved","actions","filterReducer","reducer","Filters","useSelector","filter","dispatch","useDispatch","Wrapper","TextInput","placeholder","value","onChange","e","target","styled","div","input","Menu","params","Button","onClick","button","props","Header","LikeVector","width","height","viewBox","fill","xmlns","d","loop","keyframes","Card","img","console","log","useState","isSaved","setIsSaved","history","useHistory","updateLike","a","previousState","undefined","axios","post","index","res","data","newState","OuterWrapper","className","nodeName","push","goToPoke","ImageWrapper","Image","src","InfoWrapper","IdName","toLocaleUpperCase","map","typeString","Type","LikeButton","Loader","colorSwitch","List","error","setError","allPokes","setAllPokes","useEffect","get","sortedPokemons","fetchPokes","arr","Center","el","upperTypes","toUpperCase","nameValidation","includes","typeValidation","idValidation","savedValidation","key","idRegExp","PokemonEntry","fetchPoke","response","setData","useParams","renderProperties","obj","jsxArr","Object","keys","Property","test","NiceButton","PropertyTable","gridarea","damages","misc","stats","renderHelper","h2","App","exact","path","store","configureStore","devTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c12c6a74.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nimport { RootState } from '../store'\n\ninterface SliceType {\n    name: string\n    type: string\n    id: string\n    saved: boolean\n}\n\nexport const filterSlice = createSlice({\n    name: 'filter',\n\n    initialState: {\n        name: '',\n        type: '',\n        id: '',\n        saved: false\n    } as SliceType,\n\n    reducers: {\n\n        //state =/= RootState, state === slice state  \n        \n        setName: (state, { payload }: PayloadAction<string>): void => {\n            state.name = payload\n        },\n        setType: (state, { payload }: PayloadAction<string>): void => {\n            state.type = payload\n        },\n        setId: (state, { payload }: PayloadAction<string>): void => {\n            state.id = payload\n        },\n        setSaved: (state, { payload }: PayloadAction<boolean>): void => {\n            state.saved = payload\n        }\n    }\n})\n\nexport const { setId, setName, setSaved, setType } = filterSlice.actions\n\nexport const filterReducer = filterSlice.reducer","import React from 'react'\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { RootState } from '../store/store'\nimport { setId, setName, setType } from '../store/features/filter'\n\ninterface FilterType {\n    name: string\n    type: string\n    id: string\n    saved: boolean\n}\n\nexport const Filters: React.FC = () => {\n\n    const { id, type, name } = useSelector((state: RootState) => state.filter)\n    \n    const dispatch = useDispatch()\n\n    return (\n        <Wrapper>\n            <TextInput\n                placeholder=\"Search ...\"\n                value={name}\n                onChange={e => dispatch(setName(e.target.value))}\n                type=\"text\"\n            />\n\n            <TextInput\n                placeholder=\"Number ...\"\n                value={id}\n                onChange={e => dispatch(setId(e.target.value))}\n                type=\"text\"\n            />\n\n            <TextInput\n                placeholder=\"Type ...\"\n                value={type}\n                onChange={e => dispatch(setType(e.target.value))}\n                type=\"text\"\n            />\n        </Wrapper>\n    )\n}\n\n// export const Filters = connect(mapStateToProps)(Comp)\n\nconst Wrapper = styled.div`\n    display: grid;\n    grid-template-columns: 4fr 1fr 1fr;\n    margin: 0 auto 0 auto;\n    grid-column-gap: 1em;\n\n`;\n\nconst TextInput = styled.input`\n\n    background: #FFFFFF;\n    box-shadow: 0px 4px 16px -3px rgba(0, 0, 0, 0.15);\n    border-radius: 18px;\n    border: none;\n    padding-left: 1em;\n    height: 36px;\n\n`;","import React from 'react'\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { RootState } from '../store/store';\nimport { setSaved } from '../store/features/filter'\n\nexport const Menu: React.FC = (params) => {\n    \n    const dispatch = useDispatch()\n\n    const { saved } = useSelector((state: RootState) => state.filter)\n    \n\n    return (\n        <Wrapper>\n            <Button\n                saved={!saved} \n                onClick={() => dispatch(setSaved(false))}\n            >\n                POKEMONS\n            </Button>\n            <Button\n                saved={saved} \n                onClick={() =>  dispatch(setSaved(true))}\n            >\n                SAVED\n            </Button>\n        </Wrapper>\n    )\n}\n\nconst Wrapper = styled.div`\n    width: 35%;\n    display: flex;\n    align-items: center;\n    justify-content: space-around;\n    margin: auto;\n`;\n\nconst Button = styled.button<{saved?: boolean}>`\n    background: #FFFFFF;\n    border-radius: 18px;\n    border: none;\n    font-style: normal;\n    font-weight: 700;\n    font-size: 14px;\n    line-height: 16px;\n    display: flex;\n    align-items: center;\n    text-align: center;\n    letter-spacing: 0.345em;\n    padding: 0.7em 4em 0.7em 4em;\n    cursor: pointer;\n    ${\n        props => props.saved ? 'box-shadow: 0px 4px 40px -3px rgba(0, 0, 0, 0.3);' \n    : \n        null\n    }\n`;","import React from 'react'\nimport styled from 'styled-components';\n\nimport { Filters } from './Filters'\nimport { Menu } from './Menu'\n\nexport const Header: React.FC = () => {\n    return(\n        <Wrapper>\n            <Menu />\n            <Filters />\n        </Wrapper>\n    )\n}\n\nconst Wrapper = styled.div`\n    display: grid;\n    grid-template-rows: 1fr 1fr;\n    grid-row-gap: 3em;\n    margin: 3em 0 3em 0;\n`;","import * as React from \"react\"\n\nfunction LikeVector(props: any) {\n  return (\n    <svg\n      width={15}\n      height={15}\n      viewBox=\"0 0 15 15\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        d=\"M14.551 5.83c-.458-.538-1.17-.652-1.738-.685-.537-.033-1.28-.016-2.212.065.221-.979.585-2.529.727-3.296.158-.848-.316-1.599-1.122-1.844-.774-.228-1.532.115-1.8.8l-.096.228C7.884 2.241 6.73 5.26 4.85 5.814h-.015a1.658 1.658 0 00-1.264-.571H1.706C.758 5.243 0 6.026 0 7.005v5.89c0 .98.758 1.762 1.706 1.762h1.88c.506 0 .964-.228 1.28-.587.932.196 4.566.93 6.857.93.837 0 2.575 0 2.78-1.958.095-.816.38-3.573.474-5.123.08-1.012-.047-1.648-.426-2.089zM3.586 13.646h-1.88a.754.754 0 01-.742-.767v-5.89c0-.425.332-.767.742-.767h1.88c.411 0 .743.342.743.767v5.89a.754.754 0 01-.743.767zM14.03 7.82c-.111 1.55-.395 4.291-.474 5.09-.08.735-.364 1.061-1.833 1.061-2.022 0-5.277-.62-6.446-.865.016-.081.016-.163.016-.244V6.989c0-.098-.016-.196-.032-.278 2.244-.783 3.429-3.9 3.934-5.254l.08-.212c.11-.293.457-.277.631-.212.126.033.537.196.442.702-.173.979-.71 3.247-.869 3.932a.487.487 0 00.111.44c.095.115.253.18.41.164a21.37 21.37 0 012.213-.147c.19 0 .363 0 .505.016.569.033.9.147 1.075.343.22.228.284.669.237 1.338z\"\n        fill=\"#4e4e4e\"\n    />\n    </svg>\n  )\n}\n\nexport default LikeVector","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nconst loop = keyframes`\n  0% {\n    top: 50%;\n    left: 50%;\n    width: 0;\n    height: 0;\n    opacity: 1;\n  }\n  100% {\n    top: 0px;\n    left: 0px;\n    width: 100%;\n    height: 100%;\n    opacity: 0;\n  }\n`\n\nconst Wrapper = styled.div`\n    width: 100%;\n    height: 100%;\n\n    div {\n        position: absolute;\n        border: 4px solid #000;\n        opacity: 1;\n        border-radius: 50%;\n        animation: ${loop} 0.7s cubic-bezier(0, 0.2, 0.8, 1) infinite;\n    }\n\n    div:nth-child(3){\n        animation-delay: -0.5s;\n    }\n\n`\nexport default () => <Wrapper><div/><div/></Wrapper>","import React, { useState } from 'react'\nimport styled from 'styled-components';\nimport axios from 'axios'\nimport { useHistory } from 'react-router-dom'\n\nimport { PokeData } from '../Types'\nimport Vector from './LikeVector'\nimport Loader from './Loader'\n\nconst colorSwitch = (typeString: string): string => {\n    switch (typeString) {\n        case \"Normal\":\n            return \"CACACA\"\n        case \"Electric\":\n            return \"FFE175\"\n        case \"Fire\":\n            return \"FF8A8A\"\n        case \"Water\":\n            return \"88D1FB\"\n        case \"Ice\":\n            return \"C6EAFF\"\n        case \"Fighting\":\n            return \"FFB169\"\n        case \"Ground\":\n            return \"CA9F5E\"\n        case \"Rock\":\n            return \"898373\"\n        case \"Grass\":\n            return \"B4FE7B\"\n        case \"Poison\":\n            return \"BF8CD1\"\n        case \"Steel\":\n            return \"E4E4E4\"\n        case \"Psychic\":\n            return \"FFB7FC\"\n        case \"Bug\":\n            return \"D1E16F\"\n        case \"Ghost\":\n            return \"805594\"\n        case \"Flying\":\n            return \"5F9FFF\"\n        case \"Dragon\":\n            return \"C699FF\"\n        default:\n            return \"000000\";\n    }\n}\n\nexport const Card: React.FC<PokeData> = ({ id, name, type, img, saved }) => {\n\n    console.log(\"TCL: saved\", saved)\n    const [isSaved, setIsSaved] = useState<boolean | undefined>(saved)\n    const history = useHistory()\n\n    const updateLike = async () => {\n        const previousState = isSaved\n        setIsSaved(undefined)\n        try {\n            const res = await axios.post('/api/updateone', { index: id, payload: !isSaved })\n            setIsSaved(res.data.newState)\n        } catch (error) {\n            console.log(\"TCL: updateLike -> error\", error)\n            setIsSaved(previousState)\n        }\n    }\n\n    const goToPoke = (e: any) => {\n        console.log(\"TCL: goToPoke -> e\", e)\n        if (e.target.nodeName !== 'BUTTON') {\n            history.push(`/${id}`)\n            // e.stopPropagation()\n        }\n    }\n\n    return (\n        <OuterWrapper>\n            <Wrapper className=\"osef\" onClick={e => goToPoke(e)}>\n                <ImageWrapper>\n                    <Image src={img} />\n                </ImageWrapper>\n\n                <InfoWrapper>\n                    <IdName>\n                        <div>{id}</div>\n                        <div>{name.toLocaleUpperCase()}</div>\n                    </IdName>\n\n                    {\n                        type.map((typeString, index) => {\n                            return (\n                                <Type key={index} type={typeString} >\n                                    {type[index].toLocaleUpperCase()}\n                                </Type>\n                            )\n                        })\n                    }\n\n                </InfoWrapper>\n\n            </Wrapper>\n            <LikeButton saved={isSaved} onClick={updateLike}>\n                {isSaved === undefined ?\n                    <Loader />\n                    :\n                    <Vector />\n                }\n            </LikeButton>\n        </OuterWrapper>\n\n    )\n}\n\n// export const Card = React.memo(CardComp)\n\nconst LikeButton = styled.button<{ saved: boolean | undefined }>`\n    position: absolute;\n    bottom: 20px;\n    right: 20px;\n    width: 40px;\n    height: 40px;\n    background: #FFFFFF;\n    box-shadow: 0px 4px 20px -3px rgba(0, 0, 0, 0.1);\n    border: 2px solid #c4c4c4;\n    border-radius: 50%;\n    cursor: pointer;\n\n    ${props => props.saved ?\n        `\n        background: linear-gradient(202.48deg, #F2F2F2 7.57%, #CFCFCF 90.41%);\n        border: none;\n    ` : null\n    }\n\n`;\n\nconst Type = styled.div<{ type: string }>`\n    margin-bottom: 0.5em;\n    width: 8.5em;\n    font-size: 12px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 9.5px;\n    color: #ffffff;\n    background-color: #${props => colorSwitch(props.type)};\n`;\n\nconst ImageWrapper = styled.div`\n    /* width: 100%; */\n    /* height: 100%; */\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 18px;\n`;\n\nconst Image = styled.img`\n    margin: auto;\n    height: auto;\n    width: 100%;\n`;\n\nconst Wrapper = styled.div`\n    background: #FFFFFF;\n    box-shadow: 0px 4px 20px -3px rgba(0, 0, 0, 0.1);\n    border-radius: 18px;\n    display: grid;\n    grid-template-columns: 50% 50%;\n    font-weight: 900;\n    cursor: pointer;\n    width: 100%;\n    height: 100%;\n`\n\nconst InfoWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    /* align-items: center; */\n    justify-content: center;\n    width: auto;\n    height: 100%;\n\n`;\n\nconst IdName = styled.div`\n\n    div:first-child {\n        color: #9E9E9E;\n        margin-right: 0.5em;\n    }\n\n    margin-bottom: 0.5em;\n    display: flex;\n    /* font-size: 12px; */\n    color: default;\n`;\n\nconst OuterWrapper = styled.div`\n    position: relative;\n\n`;","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components';\nimport axios from 'axios'\nimport { useSelector } from 'react-redux';\n\nimport { RootState } from '../store/store';\nimport { Card } from './Card'\nimport { PokeData } from '../Types'\nimport Loader from './Loader'\n\nexport const List = () => {\n\n    const [error, setError] = useState(false)\n\n    const [allPokes, setAllPokes] = useState<PokeData[] | null>(null)\n\n    const { name, id, type, saved } = useSelector((state: RootState) => state.filter)\n\n    useEffect(() => {\n        async function fetchPokes () {\n            try {\n                const res = await axios.get('/api/')\n                setAllPokes(res.data.sortedPokemons)\n            } catch (error) {\n                console.log(error);\n                setError(true)\n                setAllPokes(null)\n            }\n        }\n        fetchPokes()\n    }, [])\n\n    const renderPokes = (arr: PokeData[]) => {\n\n        const filteredArray = arr.filter((el: PokeData) => {\n\n            const upperTypes = el.type.map(el => el.toUpperCase())\n\n            const nameValidation = !name ? true : el.name.toLocaleUpperCase().includes(name.toLocaleUpperCase())\n            const typeValidation = !type ? true : upperTypes.includes(type.toUpperCase())\n            const idValidation = !id ? true : el.id.includes(id)\n            const savedValidation = !saved ? true : el.saved\n\n            return nameValidation && idValidation && typeValidation && savedValidation\n        })\n\n        return filteredArray.map((el, index) => <Card {...el} key={index} />)\n    }\n\n    const refetch = () => {\n        setError(false)\n        setAllPokes([])\n    }\n\n    if (error) return (\n        <Center>\n            We had trouble getting your pokemons\n            <button onClick={refetch}>\n                Try Again    \n            </button>            \n        </Center>\n    )\n\n    if (allPokes === null) return <Center>FETCHING DATA...</Center>\n\n    return <Wrapper> {renderPokes(allPokes)} </Wrapper>\n}\n\nconst Wrapper = styled.div`\n    width: 80%;\n    height: 100%;\n    margin: auto;\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n    grid-gap: 3em;\n`;\n\nconst LoaderWrapper = styled.div`\n    width: 200px;\n    height: 200px;\n`;\n\nconst Center = styled.div`\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components';\nimport { useHistory, useParams } from 'react-router-dom'\nimport axios from 'axios';\nimport { Card } from './Card'\n\nconst idRegExp = /^\\d{3}$/\n\nexport const PokemonEntry: React.FC = () => {\n\n    const fetchPoke = async () => {\n        try {\n            const response = await axios.post('/api/getone', {id})\n            setData(response.data)\n        } catch (error) {\n            console.log(\"TCL: fetchPoke -> error\", error)\n            setError(true)\n        }\n    }\n\n    const history = useHistory()\n    \n    const [data, setData] = useState(null)\n    const [error, setError] = useState(false)\n    const { id } = useParams<{ id: string }>()\n    \n    useEffect(() => {\n        fetchPoke()\n    }, [])\n    \n    \n    const fetchAgain = () => {\n        setError(false)\n        setData(null)\n        fetchPoke()\n    }\n\n    const renderProperties = (obj: {[key: string]: any}): (JSX.Element | undefined)[] | null => {\n        \n        const keysArr = Object.keys(obj)\n\n        const jsxArr = keysArr.map((key, index) => {\n            if (typeof obj[key] === 'string') return(\n                <Property key={index}>\n                    <div>\n                        {key.toLocaleUpperCase()} :\n                    </div>\n                    <div>\n                        {obj[key]}\n                    </div>\n                </Property>\n            )\n        })\n\n        if (jsxArr === []) {\n            return null\n        } else return jsxArr\n        \n    }\n\n    const renderHelper = (data: any) => {\n        return(\n        <OuterWrapper>\n            <Button onClick={() => history.push('/')}>\n                ↢ GO BACK\n            </Button>\n            <Wrapper>\n                <Card {...data} />\n                <PropertyTable gridarea=\"damages\">\n                    <Header>\n                        DAMAGES\n                    </Header>\n                    {renderProperties(data.damages)}\n                </PropertyTable>\n                <PropertyTable gridarea=\"misc\">\n                    <Header>\n                        MISC\n                    </Header>\n                    {renderProperties(data.misc)}\n                </PropertyTable>\n                <PropertyTable gridarea=\"stats\">\n                    <Header>\n                        STATS\n                    </Header>\n                    {renderProperties(data.stats)}\n                </PropertyTable>\n            </Wrapper>\n        </OuterWrapper>\n\n        )\n    }\n\n    if (!idRegExp.test(id)) return(\n        <Center>\n            Invalid id :(\n        </Center>\n    )\n\n    if (error) return(\n        <Center>\n\n            Unable to fetch requested stuff.\n            \n            <NiceButton onClick={fetchAgain}>\n                Try again\n            </NiceButton>\n\n        </Center>\n    )\n\n    if (!data) return(\n            <Center>\n                'FETCHING DATA...'        \n            </Center>\n        )\n\n    return renderHelper(data)\n}\n\nconst OuterWrapper = styled.div`\n    margin: 1em 0 1em 0;\n`;\n\nconst NiceButton = styled.button`\n    background: #FFFFFF;\n    box-shadow: 0px 4px 16px -3px rgba(0, 0, 0, 0.15);\n    border-radius: 18px;\n    border: none;\n\n`;\n\nconst Center = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nconst Wrapper = styled.div`\n    margin: 0 2em 0 2em;\n    /* width: 100%; */\n    /* height: 100%; */\n    display: grid;\n    grid-template-columns: auto 1fr 1fr 1fr;\n    grid-template-rows: 1fr ;\n    gap: 1em;\n    grid-template-areas:\n        \"card damages misc stats\"\n        /* \"moves moves moves moves\" */\n    ;\n`;\n\nconst Property = styled.div`\n    display: flex;\n    justify-content: space-between;\n    padding: 0.3em 0.5em 0.3em 0.5em;\n    margin-top: 0.5em;\n    border-bottom: 1.5px solid #807e7e;\n    background-color: #fff;\n`;\n\nconst Header = styled.h2`\n    font-weight: 700;\n    color: #ff5f43;\n    margin: 1em 0 0 0;\n`\n\nconst PropertyTable = styled.div<{gridarea?: string}>`\n    display: flex;\n    flex-direction: column;\n    /* margin: 0 2em 0 2em; */\n    ${props => props.gridarea ? `grid-area: ${props.gridarea}` : null}\n`;\n\nconst Button = styled.button<{saved?: boolean}>`\n    background: #FFFFFF;\n    border-radius: 18px;\n    border: none;\n    font-style: normal;\n    font-weight: 700;\n    font-size: 14px;\n    line-height: 16px;\n    display: flex;\n    align-items: center;\n    text-align: center;\n    letter-spacing: 0.345em;\n    padding: 0.7em 4em 0.7em 4em;\n    cursor: pointer;\n    margin: 0 0 1.5em 2em;\n`","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport { Header } from './components/Header'\nimport { List } from './components/List'\nimport { PokemonEntry } from './components/PokemonEntry';\n\n\n\nfunction App() {\n  return (\n    <Wrapper>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <Header />\n            <List />\n          </Route>\n          <Route path=\"/:id\">\n            <PokemonEntry />\n          </Route>\n        </Switch>\n      </Router>\n\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-rows: auto auto;\n  /* width: 100%; */\n  height: 100%;\n  \n`;\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport { filterReducer } from \"./features/filter\";\n\nexport const store = configureStore({\n    reducer: {\n        filter: filterReducer\n    },\n    devTools: process.env.NODE_ENV !== \"development\" ? false : true\n})\n\nexport type RootState = ReturnType<typeof store.getState>;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\n\nimport App from './App';\nimport { store } from './store/store'\n\nexport type RootState = ReturnType<typeof store.getState>;\n\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}