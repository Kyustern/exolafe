[{"/home/leon/nodeApps/exolafe/client/src/App.tsx":"1","/home/leon/nodeApps/exolafe/client/src/components/List.tsx":"2","/home/leon/nodeApps/exolafe/client/src/components/Menu.tsx":"3","/home/leon/nodeApps/exolafe/client/src/components/LikeVector.tsx":"4","/home/leon/nodeApps/exolafe/client/src/components/Card.tsx":"5","/home/leon/nodeApps/exolafe/client/src/store/store.tsx":"6","/home/leon/nodeApps/exolafe/client/src/components/Filters.tsx":"7","/home/leon/nodeApps/exolafe/client/src/components/PokemonEntry.tsx":"8","/home/leon/nodeApps/exolafe/client/src/components/Loader.tsx":"9","/home/leon/nodeApps/exolafe/client/src/index.tsx":"10","/home/leon/nodeApps/exolafe/client/src/components/Header.tsx":"11","/home/leon/nodeApps/exolafe/client/src/store/features/filter.tsx":"12"},{"size":777,"mtime":1609091320000,"results":"13","hashOfConfig":"14"},{"size":2477,"mtime":1609238964050,"results":"15","hashOfConfig":"14"},{"size":1399,"mtime":1609002246000,"results":"16","hashOfConfig":"14"},{"size":1335,"mtime":1608978861000,"results":"17","hashOfConfig":"14"},{"size":4907,"mtime":1609193803632,"results":"18","hashOfConfig":"14"},{"size":324,"mtime":1609111559970,"results":"19","hashOfConfig":"14"},{"size":1553,"mtime":1609193884104,"results":"20","hashOfConfig":"14"},{"size":4555,"mtime":1609193991344,"results":"21","hashOfConfig":"14"},{"size":661,"mtime":1608981316000,"results":"22","hashOfConfig":"14"},{"size":383,"mtime":1609193368628,"results":"23","hashOfConfig":"14"},{"size":407,"mtime":1609002052000,"results":"24","hashOfConfig":"14"},{"size":1045,"mtime":1609002262000,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"10awemn",{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"37"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},"/home/leon/nodeApps/exolafe/client/src/App.tsx",["57","58","59"],"import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport { Header } from './components/Header'\nimport { List } from './components/List'\nimport { PokemonEntry } from './components/PokemonEntry';\n\n\n\nfunction App() {\n  return (\n    <Wrapper>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <Header />\n            <List />\n          </Route>\n          <Route path=\"/:id\">\n            <PokemonEntry />\n          </Route>\n        </Switch>\n      </Router>\n\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-rows: auto auto;\n  /* width: 100%; */\n  height: 100%;\n  \n`;\n\nexport default App;\n",["60","61"],"/home/leon/nodeApps/exolafe/client/src/components/List.tsx",["62","63"],"/home/leon/nodeApps/exolafe/client/src/components/Menu.tsx",[],["64","65"],"/home/leon/nodeApps/exolafe/client/src/components/LikeVector.tsx",[],["66","67"],"/home/leon/nodeApps/exolafe/client/src/components/Card.tsx",[],"/home/leon/nodeApps/exolafe/client/src/store/store.tsx",[],"/home/leon/nodeApps/exolafe/client/src/components/Filters.tsx",["68"],"/home/leon/nodeApps/exolafe/client/src/components/PokemonEntry.tsx",["69","70"],"import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components';\nimport { useHistory, useParams } from 'react-router-dom'\nimport axios from 'axios';\nimport { Card } from './Card'\n\nconst idRegExp = /^\\d{3}$/\n\nexport const PokemonEntry: React.FC = () => {\n\n    const fetchPoke = async () => {\n        try {\n            const response = await axios.post('/api/getone', {id})\n            setData(response.data)\n        } catch (error) {\n            console.log(\"TCL: fetchPoke -> error\", error)\n            setError(true)\n        }\n    }\n\n    const history = useHistory()\n    \n    const [data, setData] = useState(null)\n    const [error, setError] = useState(false)\n    const { id } = useParams<{ id: string }>()\n    \n    useEffect(() => {\n        fetchPoke()\n    }, [])\n    \n    \n    const fetchAgain = () => {\n        setError(false)\n        setData(null)\n        fetchPoke()\n    }\n\n    const renderProperties = (obj: {[key: string]: any}): (JSX.Element | undefined)[] | null => {\n        \n        const keysArr = Object.keys(obj)\n\n        const jsxArr = keysArr.map((key, index) => {\n            if (typeof obj[key] === 'string') return(\n                <Property key={index}>\n                    <div>\n                        {key.toLocaleUpperCase()} :\n                    </div>\n                    <div>\n                        {obj[key]}\n                    </div>\n                </Property>\n            )\n        })\n\n        if (jsxArr === []) {\n            return null\n        } else return jsxArr\n        \n    }\n\n    const renderHelper = (data: any) => {\n        return(\n        <OuterWrapper>\n            <Button onClick={() => history.push('/')}>\n                â†¢ GO BACK\n            </Button>\n            <Wrapper>\n                <Card {...data} />\n                <PropertyTable gridarea=\"damages\">\n                    <Header>\n                        DAMAGES\n                    </Header>\n                    {renderProperties(data.damages)}\n                </PropertyTable>\n                <PropertyTable gridarea=\"misc\">\n                    <Header>\n                        MISC\n                    </Header>\n                    {renderProperties(data.misc)}\n                </PropertyTable>\n                <PropertyTable gridarea=\"stats\">\n                    <Header>\n                        STATS\n                    </Header>\n                    {renderProperties(data.stats)}\n                </PropertyTable>\n            </Wrapper>\n        </OuterWrapper>\n\n        )\n    }\n\n    if (!idRegExp.test(id)) return(\n        <Center>\n            Invalid id :(\n        </Center>\n    )\n\n    if (error) return(\n        <Center>\n\n            Unable to fetch requested stuff.\n            \n            <NiceButton onClick={fetchAgain}>\n                Try again\n            </NiceButton>\n\n        </Center>\n    )\n\n    if (!data) return(\n            <Center>\n                'FETCHING DATA...'        \n            </Center>\n        )\n\n    return renderHelper(data)\n}\n\nconst OuterWrapper = styled.div`\n    margin: 1em 0 1em 0;\n`;\n\nconst NiceButton = styled.button`\n    background: #FFFFFF;\n    box-shadow: 0px 4px 16px -3px rgba(0, 0, 0, 0.15);\n    border-radius: 18px;\n    border: none;\n\n`;\n\nconst Center = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nconst Wrapper = styled.div`\n    margin: 0 2em 0 2em;\n    /* width: 100%; */\n    /* height: 100%; */\n    display: grid;\n    grid-template-columns: auto 1fr 1fr 1fr;\n    grid-template-rows: 1fr ;\n    gap: 1em;\n    grid-template-areas:\n        \"card damages misc stats\"\n        /* \"moves moves moves moves\" */\n    ;\n`;\n\nconst Property = styled.div`\n    display: flex;\n    justify-content: space-between;\n    padding: 0.3em 0.5em 0.3em 0.5em;\n    margin-top: 0.5em;\n    border-bottom: 1.5px solid #807e7e;\n    background-color: #fff;\n`;\n\nconst Header = styled.h2`\n    font-weight: 700;\n    color: #ff5f43;\n    margin: 1em 0 0 0;\n`\n\nconst PropertyTable = styled.div<{gridarea?: string}>`\n    display: flex;\n    flex-direction: column;\n    /* margin: 0 2em 0 2em; */\n    ${props => props.gridarea ? `grid-area: ${props.gridarea}` : null}\n`;\n\nconst Button = styled.button<{saved?: boolean}>`\n    background: #FFFFFF;\n    border-radius: 18px;\n    border: none;\n    font-style: normal;\n    font-weight: 700;\n    font-size: 14px;\n    line-height: 16px;\n    display: flex;\n    align-items: center;\n    text-align: center;\n    letter-spacing: 0.345em;\n    padding: 0.7em 4em 0.7em 4em;\n    cursor: pointer;\n    margin: 0 0 1.5em 2em;\n`","/home/leon/nodeApps/exolafe/client/src/components/Loader.tsx",["71"],"import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nconst loop = keyframes`\n  0% {\n    top: 50%;\n    left: 50%;\n    width: 0;\n    height: 0;\n    opacity: 1;\n  }\n  100% {\n    top: 0px;\n    left: 0px;\n    width: 100%;\n    height: 100%;\n    opacity: 0;\n  }\n`\n\nconst Wrapper = styled.div`\n    width: 100%;\n    height: 100%;\n\n    div {\n        position: absolute;\n        border: 4px solid #000;\n        opacity: 1;\n        border-radius: 50%;\n        animation: ${loop} 0.7s cubic-bezier(0, 0.2, 0.8, 1) infinite;\n    }\n\n    div:nth-child(3){\n        animation-delay: -0.5s;\n    }\n\n`\nexport default () => <Wrapper><div/><div/></Wrapper>","/home/leon/nodeApps/exolafe/client/src/index.tsx",[],"/home/leon/nodeApps/exolafe/client/src/components/Header.tsx",[],"/home/leon/nodeApps/exolafe/client/src/store/features/filter.tsx",["72"],"import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nimport { RootState } from '../store'\n\ninterface SliceType {\n    name: string\n    type: string\n    id: string\n    saved: boolean\n}\n\nexport const filterSlice = createSlice({\n    name: 'filter',\n\n    initialState: {\n        name: '',\n        type: '',\n        id: '',\n        saved: false\n    } as SliceType,\n\n    reducers: {\n\n        //state =/= RootState, state === slice state  \n        \n        setName: (state, { payload }: PayloadAction<string>): void => {\n            state.name = payload\n        },\n        setType: (state, { payload }: PayloadAction<string>): void => {\n            state.type = payload\n        },\n        setId: (state, { payload }: PayloadAction<string>): void => {\n            state.id = payload\n        },\n        setSaved: (state, { payload }: PayloadAction<boolean>): void => {\n            state.saved = payload\n        }\n    }\n})\n\nexport const { setId, setName, setSaved, setType } = filterSlice.actions\n\nexport const filterReducer = filterSlice.reducer",{"ruleId":"73","severity":1,"message":"74","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":26},{"ruleId":"73","severity":1,"message":"77","line":1,"column":28,"nodeType":"75","messageId":"76","endLine":1,"endColumn":36},{"ruleId":"73","severity":1,"message":"78","line":7,"column":3,"nodeType":"75","messageId":"76","endLine":7,"endColumn":7},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"73","severity":1,"message":"83","line":9,"column":8,"nodeType":"75","messageId":"76","endLine":9,"endColumn":14},{"ruleId":"73","severity":1,"message":"84","line":80,"column":7,"nodeType":"75","messageId":"76","endLine":80,"endColumn":20},{"ruleId":"79","replacedBy":"85"},{"ruleId":"81","replacedBy":"86"},{"ruleId":"79","replacedBy":"87"},{"ruleId":"81","replacedBy":"88"},{"ruleId":"73","severity":1,"message":"89","line":8,"column":11,"nodeType":"75","messageId":"76","endLine":8,"endColumn":21},{"ruleId":"90","severity":1,"message":"91","line":29,"column":8,"nodeType":"92","endLine":29,"endColumn":10,"suggestions":"93"},{"ruleId":"94","severity":1,"message":"95","line":42,"column":49,"nodeType":"96","messageId":"97","endLine":42,"endColumn":51},{"ruleId":"98","severity":1,"message":"99","line":38,"column":1,"nodeType":"100","endLine":38,"endColumn":53},{"ruleId":"73","severity":1,"message":"101","line":3,"column":10,"nodeType":"75","messageId":"76","endLine":3,"endColumn":19},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Link' is defined but never used.","no-native-reassign",["102"],"no-negated-in-lhs",["103"],"'Loader' is defined but never used.","'LoaderWrapper' is assigned a value but never used.",["102"],["103"],["102"],["103"],"'FilterType' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchPoke'. Either include it or remove the dependency array.","ArrayExpression",["104"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'RootState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},"Update the dependencies array to be: [fetchPoke]",{"range":"107","text":"108"},[789,791],"[fetchPoke]"]